- rolls = get_rolls_to_show(@score.roll)

div.level
  a.button(href="#{page_path(@conn, :index)}")
    span.icon
      i.fas.fa-caret-left
    span = gettext("Back")
div.level
  h2.title.is-2 = @score.id

div.box
  div.tags.are-medium
    = for dice <- rolls do
      span.tag = elem(dice, 1)

= if is_allowed_to_roll_again(@score.roll) do
  div.box
    = form_for @changeset, @roll_action, fn score_form ->
      = hidden_input(score_form, :game_id, value: @score.game.id)
      = hidden_input(score_form, :user_id, value: @score.user.id)

      = inputs_for score_form, :roll, fn roll_form ->
        = hidden_input(roll_form, :predecessor_id, value: @score.roll.id)
        div.columns
          div.column
            h5.title.is-5 = gettext("Please select which dices to roll new!")
            div.select.is-multiple
              = multiple_select(roll_form, :dices, Enum.map(rolls, fn {x,y}-> {y,x} end), multiple: true, size: length(Map.to_list(rolls)))

      div.columns
        div.column
          = submit gettext("Create"), class: "button is-primary"

= render("_score_type.html", [rolls: rolls, changeset: @changeset, update_action: @update_action, score_types: @score_types])
